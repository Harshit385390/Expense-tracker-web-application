{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\expensetracker\\\\frontend\\\\src\\\\pages\\\\ExpenseChart.js\";\n// src/components/ExpenseChart.js (A conceptual example using Recharts)\n\nimport React from 'react';\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';\n\n// Define colors for your categories\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#FF0054'];\nconst ExpenseChart = ({\n  transactions\n}) => {\n  // 1. Filter only expenses (amount < 0)\n  const expenses = transactions.filter(t => t.amount < 0);\n\n  // 2. Aggregate data by category (text)\n  const aggregatedData = expenses.reduce((acc, transaction) => {\n    const category = transaction.text.toLowerCase();\n    const amount = Math.abs(transaction.amount); // Use absolute value\n\n    const existing = acc.find(item => item.name === category);\n    if (existing) {\n      existing.value += amount;\n    } else {\n      acc.push({\n        name: category,\n        value: amount\n      });\n    }\n    return acc;\n  }, []);\n  if (aggregatedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-chart-data\",\n      children: \"No expenses to display in chart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    style: {\n      width: '100%',\n      height: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"chart-title\",\n      children: \"Spending Breakdown by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(PieChart, {\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: aggregatedData,\n          dataKey: \"value\",\n          nameKey: \"name\",\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          labelLine: false,\n          label: ({\n            name,\n            percent\n          }) => `${name}: ${(percent * 100).toFixed(0)}%`,\n          children: aggregatedData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[index % COLORS.length]\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => `₹${value.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","PieChart","Pie","Cell","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","COLORS","ExpenseChart","transactions","expenses","filter","t","amount","aggregatedData","reduce","acc","transaction","category","text","toLowerCase","Math","abs","existing","find","item","name","value","push","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","data","dataKey","nameKey","cx","cy","outerRadius","fill","labelLine","label","percent","toFixed","map","entry","index","formatter","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/expensetracker/frontend/src/pages/ExpenseChart.js"],"sourcesContent":["// src/components/ExpenseChart.js (A conceptual example using Recharts)\r\n\r\nimport React from 'react';\r\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n// Define colors for your categories\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#AF19FF', '#FF0054'];\r\n\r\nconst ExpenseChart = ({ transactions }) => {\r\n    \r\n    // 1. Filter only expenses (amount < 0)\r\n    const expenses = transactions.filter(t => t.amount < 0);\r\n\r\n    // 2. Aggregate data by category (text)\r\n    const aggregatedData = expenses.reduce((acc, transaction) => {\r\n        const category = transaction.text.toLowerCase();\r\n        const amount = Math.abs(transaction.amount); // Use absolute value\r\n        \r\n        const existing = acc.find(item => item.name === category);\r\n\r\n        if (existing) {\r\n            existing.value += amount;\r\n        } else {\r\n            acc.push({ name: category, value: amount });\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    if (aggregatedData.length === 0) {\r\n        return <div className=\"no-chart-data\">No expenses to display in chart.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-container\" style={{ width: '100%', height: 300 }}>\r\n            <h3 className='chart-title'>Spending Breakdown by Category</h3>\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <PieChart>\r\n                    <Pie\r\n                        data={aggregatedData}\r\n                        dataKey=\"value\"\r\n                        nameKey=\"name\"\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        outerRadius={100}\r\n                        fill=\"#8884d8\"\r\n                        labelLine={false}\r\n                        label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                    >\r\n                        {aggregatedData.map((entry, index) => (\r\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                        ))}\r\n                    </Pie>\r\n                    <Tooltip formatter={(value) => `₹${value.toFixed(2)}`} />\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}