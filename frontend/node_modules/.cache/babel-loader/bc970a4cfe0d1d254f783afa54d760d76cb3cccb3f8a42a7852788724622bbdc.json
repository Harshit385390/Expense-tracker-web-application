{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\expensetracker\\\\frontend\\\\src\\\\pages\\\\ExpenseTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseTable = ({\n  expenses,\n  deleteExpens\n}) => {\n  // Helper function to format date safely from YYYY-MM-DD string\n  const formatDate = dateString => {\n    if (!dateString) return ''; // Handle cases where dateString might be null or undefined\n    const [year, month, day] = dateString.split('-');\n    // Construct date in local time to avoid timezone shifts\n    // month is 0-indexed in JavaScript Date constructor\n    const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n\n    // Check for invalid date (e.g., if parsing failed)\n    if (isNaN(date.getTime())) {\n      return dateString; // Fallback to original string if invalid\n    }\n    return date.toLocaleDateString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-table-container section-card\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"table-title\",\n      children: \"Recent Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-transactions-message\",\n      children: \"No transactions to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"expense-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"amount-header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: expense.amount < 0 ? 'expense-row minus' : 'expense-row plus',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"delete-cell\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => deleteExpens(expense._id),\n                children: \"\\xD7 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"expense-description-cell\",\n              children: expense.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"expense-date-cell\",\n              children: formatDate(expense.date)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"expense-amount-cell\",\n              children: [\"\\u20B9\", expense.amount.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 37\n            }, this)]\n          }, expense._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpenseTable;\nexport default ExpenseTable;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ExpenseTable","expenses","deleteExpens","formatDate","dateString","year","month","day","split","date","Date","parseInt","isNaN","getTime","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","expense","amount","onClick","_id","text","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/expensetracker/frontend/src/pages/ExpenseTable.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ExpenseTable = ({ expenses, deleteExpens }) => {\r\n\r\n    // Helper function to format date safely from YYYY-MM-DD string\r\n    const formatDate = (dateString) => {\r\n        if (!dateString) return ''; // Handle cases where dateString might be null or undefined\r\n        const [year, month, day] = dateString.split('-');\r\n        // Construct date in local time to avoid timezone shifts\r\n        // month is 0-indexed in JavaScript Date constructor\r\n        const date = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\r\n\r\n        // Check for invalid date (e.g., if parsing failed)\r\n        if (isNaN(date.getTime())) {\r\n            return dateString; // Fallback to original string if invalid\r\n        }\r\n        return date.toLocaleDateString();\r\n    };\r\n\r\n    return (\r\n        <div className=\"transactions-table-container section-card\"> {/* Added section-card here for consistent styling */}\r\n            <h2 className='table-title'>Recent Transactions</h2>\r\n            {expenses.length === 0 ? (\r\n                <p className='no-transactions-message'>No transactions to display.</p>\r\n            ) : (\r\n                <div className='table-wrapper'>\r\n                    <table className=\"expense-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th> {/* For delete button */}\r\n                                <th>Description</th>\r\n                                <th>Date</th> {/* New Date Column Header */}\r\n                                <th className='amount-header'>Amount</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {expenses.map((expense) => (\r\n                                <tr key={expense._id} className={expense.amount < 0 ? 'expense-row minus' : 'expense-row plus'}>\r\n                                    <td className='delete-cell'>\r\n                                        <button className=\"delete-button\" onClick={() => deleteExpens(expense._id)}>\r\n                                            &times; {/* HTML entity for a clear 'X' */}\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className=\"expense-description-cell\">{expense.text}</td>\r\n                                    {/* Applied formatDate helper */}\r\n                                    <td className=\"expense-date-cell\">{formatDate(expense.date)}</td>\r\n                                    <td className=\"expense-amount-cell\">\r\n                                        â‚¹{expense.amount.toFixed(2)}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}