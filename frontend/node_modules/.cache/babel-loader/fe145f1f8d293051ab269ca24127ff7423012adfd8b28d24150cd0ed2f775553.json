{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harsh\\\\Desktop\\\\expensetracker\\\\frontend\\\\src\\\\pages\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { handleError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseForm({\n  addTransaction\n}) {\n  _s();\n  const [expenseInfo, setExpenseInfo] = useState({\n    amount: '',\n    text: '',\n    date: '' // Added date field\n  });\n  const [expenseType, setExpenseType] = useState('');\n  const [customExpense, setCustomExpense] = useState('');\n  const expenseTypes = ['food', 'travel', 'shopping', 'entertainment', 'bills', 'healthcare', 'education', 'income', 'other'];\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExpenseInfo(prevExpenseInfo => ({\n      ...prevExpenseInfo,\n      [name]: value\n    }));\n  };\n  const handleTypeChange = e => {\n    const selectedType = e.target.value;\n    setExpenseType(selectedType);\n    setExpenseInfo(prevExpenseInfo => {\n      const newExpenseInfo = {\n        ...prevExpenseInfo\n      };\n      if (selectedType !== 'other') {\n        newExpenseInfo.text = selectedType; // Auto-fill text with selected type\n        setCustomExpense(''); // Clear custom expense if a predefined type is selected\n      } else {\n        newExpenseInfo.text = customExpense; // If \"other\" is selected, use custom expense text\n      }\n      return newExpenseInfo;\n    });\n  };\n  const handleCustomExpenseChange = e => {\n    const customValue = e.target.value;\n    setCustomExpense(customValue);\n    // Update the text field with custom value\n    setExpenseInfo(prevExpenseInfo => ({\n      ...prevExpenseInfo,\n      text: customValue\n    }));\n  };\n  const addExpenses = e => {\n    e.preventDefault();\n    const {\n      amount,\n      text,\n      date\n    } = expenseInfo;\n    if (!amount || !text || !date) {\n      // Check for date as well\n      handleError('Please add all Expense Details (Amount, Type, and Date)');\n      return;\n    }\n    addTransaction(expenseInfo);\n    setExpenseInfo({\n      amount: '',\n      text: '',\n      date: ''\n    }); // Clear date field\n    setExpenseType('');\n    setCustomExpense('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addExpenses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expenseType\",\n          children: \"Expense Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"expenseType\",\n          value: expenseType,\n          onChange: handleTypeChange,\n          name: \"expenseType\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Expense Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), expenseTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type.charAt(0).toUpperCase() + type.slice(1)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), expenseType === 'other' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customExpense\",\n          children: \"Custom Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleCustomExpenseChange,\n          type: \"text\",\n          id: \"customExpense\",\n          placeholder: \"Enter custom expense type...\",\n          value: customExpense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Enter your Amount...\",\n          value: expenseInfo.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          type: \"date\",\n          name: \"date\",\n          id: \"date\",\n          value: expenseInfo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseForm, \"QU6TumuLvXgaZPdmvN/e/pCubwU=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","handleError","jsxDEV","_jsxDEV","ExpenseForm","addTransaction","_s","expenseInfo","setExpenseInfo","amount","text","date","expenseType","setExpenseType","customExpense","setCustomExpense","expenseTypes","handleChange","e","name","value","target","prevExpenseInfo","handleTypeChange","selectedType","newExpenseInfo","handleCustomExpenseChange","customValue","addExpenses","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","map","type","charAt","toUpperCase","slice","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/harsh/Desktop/expensetracker/frontend/src/pages/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { handleError } from '../utils';\r\n\r\nfunction ExpenseForm({ addTransaction }) {\r\n    const [expenseInfo, setExpenseInfo] = useState({\r\n        amount: '',\r\n        text: '',\r\n        date: '' // Added date field\r\n    });\r\n    const [expenseType, setExpenseType] = useState('');\r\n    const [customExpense, setCustomExpense] = useState('');\r\n\r\n    const expenseTypes = [\r\n        'food',\r\n        'travel',\r\n        'shopping',\r\n        'entertainment',\r\n        'bills',\r\n        'healthcare',\r\n        'education',\r\n        'income',\r\n        'other'\r\n    ];\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setExpenseInfo(prevExpenseInfo => ({\r\n            ...prevExpenseInfo,\r\n            [name]: value\r\n        }));\r\n    }\r\n\r\n    const handleTypeChange = (e) => {\r\n        const selectedType = e.target.value;\r\n        setExpenseType(selectedType);\r\n\r\n        setExpenseInfo(prevExpenseInfo => {\r\n            const newExpenseInfo = { ...prevExpenseInfo };\r\n            if (selectedType !== 'other') {\r\n                newExpenseInfo.text = selectedType; // Auto-fill text with selected type\r\n                setCustomExpense(''); // Clear custom expense if a predefined type is selected\r\n            } else {\r\n                newExpenseInfo.text = customExpense; // If \"other\" is selected, use custom expense text\r\n            }\r\n            return newExpenseInfo;\r\n        });\r\n    }\r\n\r\n    const handleCustomExpenseChange = (e) => {\r\n        const customValue = e.target.value;\r\n        setCustomExpense(customValue);\r\n        // Update the text field with custom value\r\n        setExpenseInfo(prevExpenseInfo => ({\r\n            ...prevExpenseInfo,\r\n            text: customValue\r\n        }));\r\n    }\r\n\r\n    const addExpenses = (e) => {\r\n        e.preventDefault();\r\n        const { amount, text, date } = expenseInfo;\r\n\r\n        if (!amount || !text || !date) { // Check for date as well\r\n            handleError('Please add all Expense Details (Amount, Type, and Date)');\r\n            return;\r\n        }\r\n\r\n        addTransaction(expenseInfo);\r\n        setExpenseInfo({ amount: '', text: '', date: '' }); // Clear date field\r\n        setExpenseType('');\r\n        setCustomExpense('');\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h1>Expense Tracker</h1>\r\n            <form onSubmit={addExpenses}>\r\n                <div>\r\n                    <label htmlFor='expenseType'>Expense Type</label>\r\n                    <select\r\n                        id=\"expenseType\"\r\n                        value={expenseType}\r\n                        onChange={handleTypeChange}\r\n                        name=\"expenseType\"\r\n                    >\r\n                        <option value=\"\">Select Expense Type</option>\r\n                        {expenseTypes.map((type) => (\r\n                            <option key={type} value={type}>\r\n                                {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                {expenseType === 'other' && (\r\n                    <div>\r\n                        <label htmlFor='customExpense'>Custom Expense</label>\r\n                        <input\r\n                            onChange={handleCustomExpenseChange}\r\n                            type='text'\r\n                            id='customExpense'\r\n                            placeholder='Enter custom expense type...'\r\n                            value={customExpense}\r\n                        />\r\n                    </div>\r\n                )}\r\n\r\n                <div>\r\n                    <label htmlFor='amount'>Amount</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='number'\r\n                        name='amount'\r\n                        placeholder='Enter your Amount...'\r\n                        value={expenseInfo.amount}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor='date'>Date</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type='date'\r\n                        name='date'\r\n                        id='date'\r\n                        value={expenseInfo.date}\r\n                    />\r\n                </div>\r\n\r\n                <button type='submit'>Add Expense</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}